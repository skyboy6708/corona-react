[{"D:\\web\\corona\\src\\index.js":"1","D:\\web\\corona\\src\\reportWebVitals.js":"2","D:\\web\\corona\\src\\App.js":"3","D:\\web\\corona\\src\\components\\Header.js":"4","D:\\web\\corona\\src\\components\\Contents.js":"5"},{"size":500,"mtime":1612777786957,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612777786957,"results":"8","hashOfConfig":"7"},{"size":272,"mtime":1621929661488,"results":"9","hashOfConfig":"7"},{"size":274,"mtime":1621922963438,"results":"10","hashOfConfig":"7"},{"size":2409,"mtime":1621938873317,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"30na0s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\web\\corona\\src\\index.js",[],["24","25"],"D:\\web\\corona\\src\\reportWebVitals.js",[],"D:\\web\\corona\\src\\App.js",[],"D:\\web\\corona\\src\\components\\Header.js",[],"D:\\web\\corona\\src\\components\\Contents.js",["26","27"],"import { useState, useEffect } from \"react\";\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst Contents = () => {\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  useEffect(() => {\r\n    console.log(\"화면에 나타남\");\r\n    const fetchEvents = async () => {\r\n      const res = await axios.get(\r\n        \"https://api.covid19api.com/total/dayone/country/kr\"\r\n      );\r\n      makeData(res.data);\r\n    };\r\n    const makeData = (items) => {\r\n      //   items.forEach((item) => console.log(item));\r\n      const arr = items.reduce((acc, cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear();\r\n        const month = currentDate.getMonth();\r\n        const date = currentDate.getDate();\r\n        const confirmed = cur.Confirmed;\r\n        const active = cur.Active;\r\n        const death = cur.Death;\r\n        const recovered = cur.Recovered;\r\n\r\n        const findItem = acc.find((a) => a.year === year && a.month === month);\r\n\r\n        if (!findItem) {\r\n          acc.push({ year, month, date, confirmed, active, death, recovered });\r\n        }\r\n        if (findItem && findItem.date < date) {\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = death;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n\r\n        return acc;\r\n      }, []);\r\n      const labels = arr.map((a) => `${a.month + 1}월`);\r\n      setConfirmedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"국내 누적 확진자\",\r\n            backgroundColor: \"salmon\",\r\n            fill: true,\r\n            data: arr.map((a) => a.confirmed),\r\n          },\r\n        ],\r\n      });\r\n    };\r\n    fetchEvents();\r\n  });\r\n  return (\r\n    <section>\r\n      <h2>국내 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar\r\n            data={confirmedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"누적 확진자 추이\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":15,"nodeType":"34","messageId":"35","endLine":2,"endColumn":23},{"ruleId":"32","severity":1,"message":"36","line":2,"column":25,"nodeType":"34","messageId":"35","endLine":2,"endColumn":29},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'Doughnut' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","no-global-assign","no-unsafe-negation"]